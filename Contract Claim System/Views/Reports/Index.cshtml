@model List<Contract_Claim_System.Models.Claim>
@{
    ViewData["Title"] = "Detailed Claims Report";
    var role = Context.Session.GetString("UserRole");
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2><i class="bi bi-file-earmark-bar-graph"></i> Detailed Claims Report</h2>
        <p class="text-muted">Comprehensive view of all claim submissions with complete Claim Data</p>
    </div>
    <div>
        <button onclick="exportToCSV()" class="btn btn-success">
            <i class="bi bi-file-earmark-spreadsheet"></i> Download as CSV
        </button>
    </div>
</div>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-info">
        <i class="bi bi-info-circle"></i> No claims available to generate a report.
    </div>
}
else
{
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="bi bi-graph-up"></i> Summary Statistics</h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-md-2">
                            <h6 class="text-muted">Total Claims</h6>
                            <h3 class="text-primary">@Model.Count</h3>
                        </div>
                        <div class="col-md-2">
                            <h6 class="text-muted">Pending</h6>
                            <h3 class="text-warning">@Model.Count(c => c.Status == "Pending")</h3>
                        </div>
                        <div class="col-md-2">
                            <h6 class="text-muted">Approved</h6>
                            <h3 class="text-success">@Model.Count(c => c.Status == "Approved")</h3>
                        </div>
                        <div class="col-md-2">
                            <h6 class="text-muted">Rejected</h6>
                            <h3 class="text-danger">@Model.Count(c => c.Status == "Rejected")</h3>
                        </div>
                        <div class="col-md-2">
                            <h6 class="text-muted">Total Amount</h6>
                            <h3 class="text-info">@Model.Sum(c => c.TotalAmount).ToString("C")</h3>
                        </div>
                        <div class="col-md-2">
                            <h6 class="text-muted">Approved Amount</h6>
                            <h3 class="text-success">@Model.Where(c => c.Status == "Approved").Sum(c => c.TotalAmount).ToString("C")</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow">
        <div class="card-header bg-dark text-white">
            <h5 class="mb-0"><i class="bi bi-table"></i> Detailed Claims List</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0" id="claimsTable">
                    <thead class="table-light">
                        <tr>
                            <th>Claim ID</th>
                            <th>Lecturer</th>
                            <th>Module</th>
                            <th>Period</th>
                            <th>Hours</th>
                            <th>Rate</th>
                            <th>Total Amount</th>
                            <th>Status</th>
                            <th>Submitted Date</th>
                            <th>Submitted By</th>
                            <th>Role</th>
                            <th>Processed Date</th>
                            <th>Processed By</th>
                            <th>Last Modified</th>
                            <th>Modified By</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var claim in Model.OrderByDescending(c => c.SubmittedDate))
                        {
                            <tr>
                                <td>
                                    <small class="text-muted font-monospace">#@claim.ClaimId</small>
                                </td>
                                @* Use LecturerDisplayName for the full name *@
                                <td><strong>@(claim.LecturerDisplayName ?? claim.LecturerName)</strong></td>
                                <td>@claim.Module</td>
                                <td>@claim.Period</td>
                                <td class="text-end">@claim.HoursWorked</td>
                                <td class="text-end">@claim.HourlyRate.ToString("C")</td>
                                <td class="text-end"><strong>@claim.TotalAmount.ToString("C")</strong></td>
                                <td>
                                    @if (claim.Status == "Pending")
                                    {
                                        <span class="badge bg-warning text-dark">
                                            <i class="bi bi-clock"></i> Pending
                                        </span>
                                    }
                                    else if (claim.Status == "Approved")
                                    {
                                        <span class="badge bg-success">
                                            <i class="bi bi-check-circle"></i> Approved
                                        </span>
                                    }
                                    else if (claim.Status == "Rejected")
                                    {
                                        <span class="badge bg-danger">
                                            <i class="bi bi-x-circle"></i> Rejected
                                        </span>
                                    }
                                </td>
                                <td>
                                    <small>@claim.SubmittedDate.ToString("MMM dd, yyyy")</small><br />
                                    <small class="text-muted">@claim.SubmittedDate.ToString("hh:mm tt")</small>
                                </td>
                                <td>@claim.SubmittedBy</td>
                                <td><span class="badge bg-secondary">@claim.SubmittedByRole</span></td>
                                <td>
                                    @if (claim.ProcessedDate.HasValue)
                                    {
                                        <small>@claim.ProcessedDate.Value.ToString("MMM dd, yyyy")</small>

                                        <br />
                                        <small class="text-muted">@claim.ProcessedDate.Value.ToString("hh:mm tt")</small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(claim.ApprovedBy))
                                    {
                                        <small class="text-success">@claim.ApprovedBy</small>
                                    }
                                    else if (!string.IsNullOrEmpty(claim.RejectedBy))
                                    {
                                        <small class="text-danger">@claim.RejectedBy</small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
                                <td>
                                    <small>@claim.LastModified.ToString("MMM dd, yyyy")</small><br />
                                    <small class="text-muted">@claim.LastModified.ToString("hh:mm tt")</small>
                                </td>
                                <td>@claim.ModifiedBy</td>
                                <td>
                                    <a asp-controller="Claims" asp-action="Details" asp-route-id="@claim.ClaimId"
                                       class="btn btn-sm btn-info" title="View Full Details">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col-md-6">
                    <small class="text-muted">
                        <i class="bi bi-calendar"></i> Report Generated: @DateTime.Now.ToString("MMMM dd, yyyy hh:mm tt")
                    </small>
                </div>
                <div class="col-md-6 text-end">
                    <small class="text-muted">
                        <i class="bi bi-file-text"></i> Total Records: @Model.Count
                    </small>
                </div>
            </div>
        </div>
    </div>
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

<style media="print">
    .btn, nav, footer {
        display: none !important;
    }

    .card {
        border: none !important;
        box-shadow: none !important;
    }
</style>

<script>
    function exportToCSV() {
        const table = document.getElementById('claimsTable');
        let csv = [];

        for (let i = 0; i < table.rows.length; i++) {
            let row = [], cols = table.rows[i].querySelectorAll('td, th');

            for (let j = 0; j < cols.length - 1; j++) {
                let data = cols[j].innerText.replace(/(\r\n|\n|\r)/gm, ' ').replace(/"/g, '""');
                row.push('"' + data + '"');
            }

            csv.push(row.join(','));
        }

        const csvFile = new Blob([csv.join('\n')], { type: 'text/csv' });
        const downloadLink = document.createElement('a');
        downloadLink.download = 'claims-report-' + new Date().toISOString().slice(0,10) + '.csv';
        downloadLink.href = window.URL.createObjectURL(csvFile);
        downloadLink.style.display = 'none';
        document.body.appendChild(downloadLink);
        downloadLink.click();
        document.body.removeChild(downloadLink);
    }
</script>
